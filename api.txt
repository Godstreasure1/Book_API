Authentication and Authorization
security
- tools or packages: bcrypt (for hashing of passwords or credentials), jwt (for serialization and deserialization)
Session
serialization
Deserialization



Authentication and Authorization
- Session management - redis for session || mongodb for session
- Bearer Token - jwt - JsonWebToken
- Basic Auth - username and passwords
- OAuth2 - social login (gmail, facebook, github etc...)


# Middleware
A middleware is like a function or method that will run before the next method to it runs


# Assignment
- Create a github repo called user_registry
- clone the github repo(empty repo) into your local machine(laptop)
- Implementation the route, method to register a user successfully.
- Take into account the schema to use:
1. firstName
2. lastName
3. email
4. age
5. password

-Note that the user_registry is only suppose to have one user, make sure not to have more than one user
i.e one email per a user

- Note: make sure to hash the password using bcrypt.


Association/relationship
e.g one author can have many posts
e.g one user can have only one profile
e.g many users can have many comments on a post

user or author can publish many books

How to send email with nodemailer
# Nodemailer

Assignment2:
create an API:
- user can register
- user can login
- user can request for change of password(Implementate forgot password)


Authorization
-RBAC (Role Based Access Control) - using same schema or table or collection for different types of users

The aggregate framework of mongoDB

SQL - Structure Query Language. The language for Relational Database